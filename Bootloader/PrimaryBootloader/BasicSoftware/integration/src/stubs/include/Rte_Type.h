/** @file     Rte_Type.h
  *
  * @brief    RTE type definitions
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.3.0pr11
  *
  * @note     Generated by pre-release software - not for production use!
  *
  * @note     By using this software you agree to all of the terms in the
  *           End User License Agreement (README-PREVIEW_RELEASE_EULA.pdf)
  */

#ifndef RTE_TYPE_H
#define RTE_TYPE_H

//#include "Rte.h"
//#include "Rte_Cfg.h" TODO_Andrew
#include "Dem_Types.h"

/*******************************************************
 ***
 *** Forward Declarations
 ***
 *******************************************************/

struct Rte_CDS_Base_SWC;
struct Rte_CDS_BswM;
struct Rte_CDS_ComM;
struct Rte_CDS_Com_SWC;
struct Rte_CDS_Dcm;
struct Rte_CDS_Dem;
struct Rte_CDS_Det;
struct Rte_CDS_Diag_SWC;
struct Rte_CDS_E2E_SWC_Rx;
struct Rte_CDS_E2E_SWC_Tx;
struct Rte_CDS_EcuM;
struct Rte_CDS_FiM;
struct Rte_CDS_Memory_SWC;
struct Rte_CDS_NvM;
struct Rte_CDS_WdgM;
struct Rte_CDS_Wdg_SWC;

/*******************************************************
 ***
 *** Types
 ***
 *******************************************************/

/* Information: No typedef for ImplementationDataType uint8 because typeEmitter is a value other than RTE */
// typedef uint8 DoIP_ActivationLineRequestType;
// typedef uint8 DoIP_PowerStateType;



typedef uint8 Impl_Pim_DataType[64];
typedef uint16 BswM_ModeType;

typedef uint16 BswM_UserType;

typedef uint8 CanIf_ControllerModeType_Enum_impl;

typedef uint8 CanIf_PduGetModeType_Enum_impl;

typedef struct {
   CanIf_ControllerModeType_Enum_impl DeviceMode;
   CanIf_PduGetModeType_Enum_impl     ChannelMode;
} CanIf_ControllerStateType_struct_impl;

typedef CanIf_ControllerStateType_struct_impl CanIf_ControllerState_Astruct_impl_0[1];
typedef uint8 CanIf_NotifStatusType_Enum_impl;

typedef CanIf_NotifStatusType_Enum_impl CanIf_NotifStatusType_Aenum_impl_0[8];
typedef uint8 CanIf_boolean_impl;

typedef uint8 CanIf_u8_impl;

typedef uint8 CanSM_boolean_Impl;

typedef CanSM_boolean_Impl CanSM_Aboolean_impl[1];
typedef uint8 CanSM_u8_Impl;

typedef CanSM_u8_Impl CanSM_Au8_impl[1];
typedef uint8 CanSM_BusOffRecoveryStateType_Enum_impl;

typedef uint8 CanSM_NetworkModeStateType_Enum_impl;

typedef uint16 CanSM_u16_Impl;

typedef uint8 CanSM_TimerStateType_Enum_impl;

typedef struct {
   CanSM_u16_Impl                 cntTick_u16;
   CanSM_TimerStateType_Enum_impl stTimer;
} CanSM_TimerConfig_struct_impl;

typedef CanSM_TimerConfig_struct_impl CanSM_TimerConfig_a_Astruct_impl[1];
typedef CanSM_BusOffRecoveryStateType_Enum_impl CanSM_currBOR_State_a_Aenum_impl[1];
typedef CanSM_NetworkModeStateType_Enum_impl CanSM_currComM_Mode_a_Aenum_impl[1];
typedef uint16 Com_impl_u16;

typedef Com_impl_u16 Com_SigBuf_au16_impl[4];
/* Information: No typedef for ImplementationDataType uint32 because typeEmitter is a value other than RTE */

typedef uint32 Com_impl_u32;

typedef Com_impl_u32 Com_SigBuf_au32_impl[2];
typedef uint8 Com_impl_u8;

typedef Com_impl_u8 Com_SigBuf_au8_impl[13];
typedef Com_impl_u8 Com_implDataType_au8_Size8[8];
/* Information: No typedef for ImplementationDataType boolean because typeEmitter is a value other than RTE */

typedef boolean Com_impl_b;

typedef uint32 ComM_uint32_Impl;

typedef uint16 ComM_uint16_Impl;

typedef uint8 ComM_uint8_Impl;

typedef uint8 ComM_bool_Impl;

typedef struct {
   ComM_uint32_Impl ChannelState_e;
   ComM_uint32_Impl LightTimeoutCtr_u32;
   ComM_uint16_Impl MinFullComTimeoutCtr_u16;
   ComM_uint8_Impl  ChannelMode_u8;
   ComM_uint8_Impl  BusSmMode_u8;
   ComM_uint8_Impl  UserRequestCtr_u8;
   ComM_uint8_Impl  PassiveRequestState_u8;
   ComM_uint8_Impl  PncRequestCtr_u8;
   ComM_uint8_Impl  InhibitionReqStatus_u8;
   ComM_bool_Impl   NmNetworkRequestStatus_b;
   ComM_bool_Impl   DiagnosticRequestState_b;
   ComM_bool_Impl   CommunicationAllowed_b;
   ComM_bool_Impl   NmBusSleepIndicationStatus_b;
   ComM_bool_Impl   NmPrepareBusSleepIndicationStatus_b;
   ComM_bool_Impl   NmNetworkModeStatus_b;
} ComM_ChannelStruct_Impl;

typedef ComM_ChannelStruct_Impl ComM_ChannelStruct_Array_Impl[1];
typedef uint8 ComM_InhibitionStatusType;

typedef uint8 ComM_ModeType;

typedef uint8 ComM_UserHandleType;

typedef struct {
   uint8               numberOfRequesters;
   ComM_UserHandleType handleArray[1];
} ComM_UserHandleArrayType;

typedef struct {
   ComM_uint16_Impl WakeUpInhibitionCtr_u16;
   ComM_uint16_Impl LimitToNoComCtr_u16;
   ComM_uint8_Impl  RequestedUserMode_t;
   ComM_uint8_Impl  IndicatedUserMode_t;
   ComM_uint8_Impl  numChannelsInFullCom_u8;
   ComM_uint8_Impl  numChannelsInSilentCom_u8;
   ComM_uint8_Impl  numChannelsInNoCom_u8;
} ComM_UserStruct_Impl;

typedef ComM_UserStruct_Impl ComM_UserStruct_Array_Impl[1];
/* Information: No typedef for ImplementationDataType BufReq_ReturnType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType BusTrcvErrorType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType IcomConfigIdType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType IcomSwitch_ErrorType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NetworkHandleType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NotifResultType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PNCHandleType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint16 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PduIdType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PduLengthType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PduInfoType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType TpDataStateType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType RetryInfoType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType TPParameterType because typeEmitter is a value other than RTE */
typedef uint8 Dcm_ConfirmationStatusType;

typedef uint8 Dcm_DataArrayTypeUint8_DspData_ASW_VER_F189Type[8];
typedef uint8 Dcm_DataArrayTypeUint8_DspData_MANU_DATE_F18BType[8];
typedef uint8 Dcm_DataArrayTypeUint8_DspData_SYS_SUP_ID_F18AType[8];
typedef uint8 Dcm_DidSupportedType;

typedef uint8 Dcm_KeyArray_DSP_SEC_LEV_L1Type[2];
typedef uint8 Dcm_KeyArray_DSP_SEC_LEV_L2Type[2];
typedef uint8 Dcm_KeyArray_DSP_SEC_LEV_L3Type[2];
typedef uint8 Dcm_KeyArray_DSP_SEC_LEV_L4Type[2];

typedef uint8 Dcm_InputOutputControlParameterType;
typedef uint8 Dcm_NegativeResponseCodeType;

typedef uint8 Dcm_OpStatusType;

typedef uint8 Dcm_ProtocolType;

typedef uint32 Dcm_RequestDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspRequestRoutineResultsOutSignal_0Type;

typedef uint32 Dcm_RequestDataOut_DcmDspRoutine_Test_DcmDspRequestRoutineResultsOutSignal_0Type;

typedef uint8 Dcm_SecLevelType;

typedef uint8 Dcm_SeedArray_DSP_SEC_LEV_L1Type[2];
typedef uint8 Dcm_SeedArray_DSP_SEC_LEV_L2Type[2];
typedef uint8 Dcm_SeedArray_DSP_SEC_LEV_L3Type[2];
typedef uint8 Dcm_SeedArray_DSP_SEC_LEV_L4Type[2];
typedef uint8 Dcm_SesCtrlType;

typedef uint16 Dcm_StopDataIn_DcmDspRoutine_CheckPgmPreCond_DcmDspStopRoutineInSignal_0Type;

typedef uint16 Dcm_StopDataIn_DcmDspRoutine_Test_DcmDspStopRoutineInSignal_0Type;

typedef uint16 Dcm_StopDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStopRoutineOutSignal_0Type;

typedef uint32 Dcm_StopDataOut_DcmDspRoutine_Test_DcmDspStopRoutineOutSignal_0Type;

typedef uint8 Dem_DTCFormatType;

typedef uint8 Dem_DTCOriginType;

typedef uint8 Dem_DTCStatusMaskType;

typedef uint8 Dem_DebounceResetStatusType;

typedef uint8 Dem_DebouncingStateType;


typedef uint8 Dem_IndicatorIdType;

typedef uint8 Dem_IndicatorStatusType;



typedef uint8 Dem_MaxDataValueType[1];
typedef uint8 Dem_OperationCycleIdType;

typedef uint8 Dem_OperationCycleStateType;

typedef uint8 Dem_ReturnClearDTCType;

typedef uint8 Dem_UdsStatusByteType;

typedef uint8 EcuM_BootTargetType;

typedef uint8 EcuM_ShutdownCauseType;

typedef uint16 EcuM_ShutdownModeType;

typedef uint8 EcuM_ShutdownTargetType;

typedef uint32 EcuM_TimeType;

typedef uint16 EcuM_UserType;

typedef uint16 FiM_FunctionIdType;

/* Information: No typedef for ImplementationDataType MemIf_JobResultType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType MemIf_Rb_MigrationResult_ten because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType MemIf_StatusType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NvM_Rb_MigrationResult_ten because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NvM_Rb_RequestType_ten because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NvM_Rb_StatusType because typeEmitter is a value other than RTE */

typedef uint8 PduR_uint8_impl;

/* Information: No typedef for ImplementationDataType float32 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType float64 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint16 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint16_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint32 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint32_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint64 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint8 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint8_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint16_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint32_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint64 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint8_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Std_ReturnType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Std_VersionInfoType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgIf_ModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Rte_ModeType_WdgMSupervisionCycle because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType TickType because typeEmitter is a value other than RTE */

typedef uint8 WdgM_CheckpointIdType;

typedef uint8 WdgM_SupervisedEntityIdType;

/* Information: No typedef for ImplementationDataType WdgM_AliveSupervisionType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_ModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_DeadlineSupervisionType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_LocalStatusParamsType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_TriggerType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_PrvModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_ConfigType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_GlobalStatusType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_LocalStatusType because typeEmitter is a value other than RTE */

typedef struct {
   uint8 Impl_CKS;
   uint8 Impl_Alive_Cnt;
   uint8 Impl_Data;
} E2EImplementationDataType_0;

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Base_SWC_BswMSwcGenericRequest_ClientServerInterface_BswMSwcGenericRequest) (VAR(BswM_UserType, AUTOMATIC) Requesting_user, VAR(BswM_ModeType, AUTOMATIC) Requested_mode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Base_SWC_EcuM_ShutdownTarget_SelectShutdownTarget) (VAR(EcuM_ShutdownTargetType, AUTOMATIC) shutdownTarget, VAR(EcuM_ShutdownModeType, AUTOMATIC) shutdownMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_CheckPgmPreCond_RequestResults) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_RequestDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspRequestRoutineResultsOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) dataOut_DcmDspRequestRoutineResultsOutSignal_0, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_CheckPgmPreCond_Start) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_CheckPgmPreCond_Stop) (VAR(Dcm_StopDataIn_DcmDspRoutine_CheckPgmPreCond_DcmDspStopRoutineInSignal_0Type, AUTOMATIC) dataIn_DcmDspStopRoutineInSignal_0, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_StopDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStopRoutineOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) dataOut_DcmDspStopRoutineOutSignal_0, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_Test_RequestResults) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_RequestDataOut_DcmDspRoutine_Test_DcmDspRequestRoutineResultsOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) dataOut_DcmDspRequestRoutineResultsOutSignal_0, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_Test_Start) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_Test_Stop) (VAR(Dcm_StopDataIn_DcmDspRoutine_Test_DcmDspStopRoutineInSignal_0Type, AUTOMATIC) dataIn_DcmDspStopRoutineInSignal_0, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_StopDataOut_DcmDspRoutine_Test_DcmDspStopRoutineOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) dataOut_DcmDspStopRoutineOutSignal_0, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L1_CompareKey) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L1_GetSeed) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L2_CompareKey) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L2_GetSeed) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L3_CompareKey) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L3_GetSeed) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L4_CompareKey) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_SecurityAccess_DSP_SEC_LEV_L4_GetSeed) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DCMServices_GetActiveProtocol) (CONSTP2VAR(Dcm_ProtocolType, AUTOMATIC, RTE_APPL_DATA) ActiveProtocol);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DCMServices_GetSecurityLevel) (CONSTP2VAR(Dcm_SecLevelType, AUTOMATIC, RTE_APPL_DATA) SecLevel);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DCMServices_GetSesCtrlType) (CONSTP2VAR(Dcm_SesCtrlType, AUTOMATIC, RTE_APPL_DATA) SesCtrlType);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DCMServices_ResetToDefaultSession) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DTCSuppression_SetDTCSuppression) (VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(boolean, AUTOMATIC) SuppressionStatus);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticInfo_GetDTCOfEvent) (VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, CONSTP2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) DTCOfEvent);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticInfo_GetEventFailed) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) EventFailed);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticInfo_GetEventStatus) (CONSTP2VAR(Dem_UdsStatusByteType, AUTOMATIC, RTE_APPL_DATA) EventStatusByte);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticInfo_GetEventTested) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) EventTested);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticInfo_GetFaultDetectionCounter) (CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) FaultDetectionCounter);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticMonitor_ClearPrestoredFreezeFrame) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticMonitor_PrestoreFreezeFrame) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticMonitor_ResetEventStatus) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_DiagnosticMonitor_SetEventStatus) (VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_FunctionInhibition_GetFunctionPermission) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) Permission);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Diag_SWC_OperationCycle_SetOperationCycleState) (VAR(Dem_OperationCycleStateType, AUTOMATIC) CycleState);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Memory_SWC_NvMService_SetRamBlockStatus) (VAR(boolean, AUTOMATIC) BlockChanged);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Wdg_SWC_WdgM_AliveSupervision_CheckpointReached) (VAR(WdgM_CheckpointIdType, AUTOMATIC) CheckpointID);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_ModeFP_Dcm_Mdg2_MDGP_Mdg2) (void);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_ModeFP_Diag_SWC_DcmDiagnosticSessionControl_MDGP_DcmDiagnosticSessionControl) (void);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_ModeFP_Wdg_SWC_WdgM_GlobalMode_currentMode) (void);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_ModeFP_Wdg_SWC_WdgM_IndividualMode_currentMode) (void);

typedef Impl_Pim_DataType Rte_PimType_Memory_SWC_PIM_Swc_Type;
typedef P2FUNC(P2VAR(Rte_PimType_Memory_SWC_PIM_Swc_Type, AUTOMATIC, RTE_APPL_DATA), RTE_CODE, Rte_PimFP_Memory_SWC_PIM_SWC_01) (void);

typedef P2FUNC(P2VAR(Rte_PimType_Memory_SWC_PIM_Swc_Type, AUTOMATIC, RTE_APPL_DATA), RTE_CODE, Rte_PimFP_Memory_SWC_PIM_SWC_02) (void);

typedef P2FUNC(P2VAR(Rte_PimType_Memory_SWC_PIM_Swc_Type, AUTOMATIC, RTE_APPL_DATA), RTE_CODE, Rte_PimFP_Memory_SWC_PIM_SWC_03) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Dcm_DataServices_DspData_ASW_VER_F189_Data) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Dcm_DataServices_DspData_MANU_DATE_F18B_Data) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Dcm_DataServices_DspData_SYS_SUP_ID_F18A_Data) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Diag_SWC_DataServices_DspData_SYS_SUP_ID_F18A_Data) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_E2E_SWC_Rx_E2E_DataInterface_0_Alive_Cnt) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_E2E_SWC_Rx_E2E_DataInterface_0_CKS) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_E2E_SWC_Rx_E2E_DataInterface_0_Data) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2CONST(struct Rte_CDS_Base_SWC,AUTOMATIC,RTE_CONST) Rte_SelfType_Base_SWC;

typedef P2CONST(struct Rte_CDS_BswM,AUTOMATIC,RTE_CONST) Rte_SelfType_BswM;

typedef P2CONST(struct Rte_CDS_ComM,AUTOMATIC,RTE_CONST) Rte_SelfType_ComM;

typedef P2CONST(struct Rte_CDS_Com_SWC,AUTOMATIC,RTE_CONST) Rte_SelfType_Com_SWC;

typedef P2CONST(struct Rte_CDS_Dcm,AUTOMATIC,RTE_CONST) Rte_SelfType_Dcm;

typedef P2CONST(struct Rte_CDS_Dem,AUTOMATIC,RTE_CONST) Rte_SelfType_Dem;

typedef P2CONST(struct Rte_CDS_Det,AUTOMATIC,RTE_CONST) Rte_SelfType_Det;

typedef P2CONST(struct Rte_CDS_Diag_SWC,AUTOMATIC,RTE_CONST) Rte_SelfType_Diag_SWC;

typedef P2CONST(struct Rte_CDS_E2E_SWC_Rx,AUTOMATIC,RTE_CONST) Rte_SelfType_E2E_SWC_Rx;

typedef P2CONST(struct Rte_CDS_E2E_SWC_Tx,AUTOMATIC,RTE_CONST) Rte_SelfType_E2E_SWC_Tx;

typedef P2CONST(struct Rte_CDS_EcuM,AUTOMATIC,RTE_CONST) Rte_SelfType_EcuM;

typedef P2CONST(struct Rte_CDS_FiM,AUTOMATIC,RTE_CONST) Rte_SelfType_FiM;

typedef P2CONST(struct Rte_CDS_Memory_SWC,AUTOMATIC,RTE_CONST) Rte_SelfType_Memory_SWC;

typedef P2CONST(struct Rte_CDS_NvM,AUTOMATIC,RTE_CONST) Rte_SelfType_NvM;

typedef P2CONST(struct Rte_CDS_WdgM,AUTOMATIC,RTE_CONST) Rte_SelfType_WdgM;

typedef P2CONST(struct Rte_CDS_Wdg_SWC,AUTOMATIC,RTE_CONST) Rte_SelfType_Wdg_SWC;

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchAckFP_WdgM_WdgM_GlobalMode_currentMode) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchAckFP_WdgM_WdgM_IndividualMode_currentMode) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmControlDTCSetting_MDGP_DcmControlDTCSetting) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmDiagnosticSessionControl_MDGP_DcmDiagnosticSessionControl) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmEcuReset_MDGP_DcmEcuReset) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Diag_SWC_Mdg2_MDGP_Mdg2) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_WdgM_WdgM_GlobalMode_currentMode) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_WdgM_WdgM_IndividualMode_currentMode) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_ETAS_SenderReceiverInterface_uint8_uint8_Impl) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_BatteryIdentifier_Tx_BMS_SG_BatteryIdentifier_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_BatteryStatus_Tx_BMS_SG_BatteryStatus_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_CapacityMeasure_Tx_BMS_SG_CapacityMeasure_Tx) (VAR(uint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_Counter_Tx_BMS_SG_Counter_Tx) (VAR(uint32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_CurrentMeasure_Tx_BMS_SG_CurrentMeasure_Tx) (VAR(uint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_EngineCoolantTemp_Tx_BMS_SG_EngineCoolantTemp_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_EngineFuelTemp_Tx_BMS_SG_EngineFuelTemp_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_EngineSpeed_Tx_BMS_SG_EngineSpeed_Tx) (VAR(uint32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_EngineTorque_Tx_BMS_SG_EngineTorque_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_StateOfCharge_Tx_BMS_SG_StateOfCharge_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_StateOfHealth_Tx_BMS_SG_StateOfHealth_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_Status_Tx_BMS_SG_Status_Tx) (VAR(uint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_VehicleSpeed_Tx_BMS_SG_VehicleSpeed_Tx) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_BMS_SG_VoltageMeasure_Tx_BMS_SG_VoltageMeasure_Tx) (VAR(uint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Com_SWC_SRInterface_CanNm_TestResult_CanNm_TestResult) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Dcm_DataServices_DspData_ASW_VER_F189_Data) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Dcm_DataServices_DspData_SYS_SUP_ID_F18A_Data) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Diag_SWC_DataServices_DspData_ASW_VER_F189_Data) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Diag_SWC_DataServices_DspData_MANU_DATE_F18B_Data) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Diag_SWC_DataServices_DspData_SYS_SUP_ID_F18A_Data) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Diag_SWC_SRInterface_TST_FimPermission_TST_FimPermission) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_E2E_SWC_Rx_SRInterface_E2E_TestResult_E2E_TestResult) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_E2E_SWC_Tx_E2E_DataInterface_0_Alive_Cnt) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_E2E_SWC_Tx_E2E_DataInterface_0_CKS) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_E2E_SWC_Tx_E2E_DataInterface_0_Data) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_ETAS_SenderReceiverInterface_uint8_uint8_Impl) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_SRInterface_Pim1_First_Pim1_First) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_SRInterface_Pim1_Last_Pim1_Last) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_SRInterface_Pim2_First_Pim2_First) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_SRInterface_Pim2_Last_Pim2_Last) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_SRInterface_Pim3_First_Pim3_First) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Memory_SWC_SRInterface_Pim3_Last_Pim3_Last) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Wdg_SWC_SRInterface_WDG_TestResult_WDG_TestResult) (VAR(uint8, AUTOMATIC) data);


#endif /* !RTE_TYPE_H */

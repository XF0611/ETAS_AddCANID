/** @file     SchM_Dcm.h
  *
  * @brief    Basic Software Scheduler Module Interlink header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.3.0pr11 
  *
  * @note     Generated by pre-release software - not for production use!
  *
  * @note     By using this software you agree to all of the terms in the
  *           End User License Agreement (README-PREVIEW_RELEASE_EULA.pdf)
  */

#ifndef SchM_Dcm
#define SchM_Dcm

#include "SchM_Dcm_Type.h"
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_BSWSE_DcmMainFunction)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) SchM_Switch_Dcm_DcmDiagnosticSessionControl(VAR(uint8, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) SchM_Switch_Dcm_DcmEcuReset(VAR(uint8, AUTOMATIC) data);
#define RTE_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_BSWSE_DcmMainFunction)
/* Inline read optimization; SchM_Switch_Dcm_DcmControlDTCSetting to direct read */
#define SchM_Switch_Dcm_DcmControlDTCSetting( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))SCHM_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_BSWSE_DcmMainFunction)
#define SchM_Switch_Dcm_DcmDiagnosticSessionControl( data ) (SchM_Switch_Dcm_DcmDiagnosticSessionControl(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_BSWSE_DcmMainFunction)
#define SchM_Switch_Dcm_DcmEcuReset( data ) (SchM_Switch_Dcm_DcmEcuReset(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Schedulable Entity Prototypes
 ***
 *******************************************************/

#define DCM_START_SEC_CODE
#include "Dcm_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, DCM_CODE) Dcm_MainFunction(void);
#define DCM_STOP_SEC_CODE
#include "Dcm_MemMap.h" /*lint !e537 permit multiple inclusion */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !SchM_Dcm */
